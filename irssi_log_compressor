#!/usr/bin/python3
import sys
import os
import glob
import datetime
import lzma

now = datetime.datetime.now()
global_data_size = 0
global_compressed_size = 0


def deleteOldFile(filename):
    os.remove(filename)


def getFileSize(filename):
    file_size = os.path.getsize(filename)
    return file_size


def printCompressionFileStats(filename, compressed_file_name):
    global global_data_size
    global global_compressed_size

    data_file_size = getFileSize(filename)
    compressed_file_size = getFileSize(compressed_file_name)

    global_data_size += data_file_size
    global_compressed_size += compressed_file_size

    print("{0:10} -> {1:10}: {3:5} -> {4:5} {2:3.2f}%".format(
            filename,
            compressed_file_name,
            compressed_file_size * 100. / data_file_size,
            data_file_size,
            compressed_file_size
        )
    )


def compressFile(filename):
    data_file = open(filename, mode='rb')
    compressed_file_name = filename + ".xz"
    compressed_file = lzma.open(
        filename=compressed_file_name,
        mode='wb',
        preset=9 | lzma.PRESET_EXTREME,
    )
    data = data_file.read()
    compressed_file.write(data)
    data_file.close()
    compressed_file.flush()
    compressed_file.close()
    printCompressionFileStats(filename, compressed_file_name)
    deleteOldFile(data_file.name)

os.chdir(os.path.expanduser('~'))
os.chdir('irclogs')
server_list = [
    x for x in glob.glob('*') if os.path.isdir(x)
]
for server in server_list:
    print("Changing working directory to " + server)
    os.chdir(server)
    file_list = glob.glob('*.log')
    for log_file in file_list:
        if log_file.split('.')[-2] == (
            '{0:04d}-{1:02d}-{2:02d}'.format(
                now.year,
                now.month,
                now.day
            )
        ):
            continue
        compressFile(log_file)
    os.chdir('..')

if global_data_size == 0:
    print("No data to compression...")
else:
    print(
        "Data -> Compressed: {1:5} -> "
        "{2:5} {0:3.2f}%".format(
            (
                global_compressed_size * 100. /
                global_data_size
            ),
            global_data_size,
            global_compressed_size
        )
    )

sys.exit(0)
